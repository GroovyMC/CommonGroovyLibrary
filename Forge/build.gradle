buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}
apply plugin: 'org.spongepowered.mixin'

archivesBaseName = "${mod_name}-forge-${minecraft_version}"

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}-${minecraft_version}"
    
    if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
        // This location is hardcoded in Forge and can not be changed.
        // https://github.com/MinecraftForge/MinecraftForge/blob/be1698bb1554f9c8fa2f58e32b9ab70bc4385e60/fmlloader/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModFile.java#L123
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        project.logger.debug('Forge Access Transformers are enabled for this project.')
    }

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                cgl {
                    source sourceSets.main
                    source project(':Common').sourceSets.main
                }
            }
        }

        client {
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
        }

        server {
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'

        }

        data {
            ideaModule "${rootProject.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly project(path: ':Common', configuration: 'namedElements')

    compileOnly group:'com.google.auto.service', name:'auto-service', version:'1.0.1'
    annotationProcessor group:'com.google.auto.service', name:'auto-service', version:'1.0.1'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly "com.matyrobbrt.gml:gml:${gml_version}"
    runtimeOnly("com.matyrobbrt.gml:gml:${gml_version}:all") {
        exclude module: 'transform'
    }
}

tasks.withType(GroovyCompile) {
    source(project(':Common').sourceSets.main.allGroovy)
    source(project(':Common').sourceSets.main.allJava)
}

tasks.withType(JavaCompile) {
    source(project(':Common').sourceSets.main.allJava)
}

processResources {
    from project(':Common').sourceSets.main.resources
}

jar.finalizedBy('reobfJar')