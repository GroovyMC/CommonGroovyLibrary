plugins {
    id 'maven-publish'
    id 'org.quiltmc.loom' version '0.12.+'
}

archivesBaseName = "cgl-${minecraft_version}"

repositories {
    maven {
        name = 'Forge / Mixin'
        url = 'https://maven.minecraftforge.net'
    }
}

sourceSets {
    main {
        java {
            srcDirs = []
        }
    }
    extension {}
    transform {
        compileClasspath += extension.output
        runtimeClasspath += extension.output
    }
}

configurations {
    extensionCompileOnly.extendsFrom(compileClasspath)
    transformCompileOnly.extendsFrom(compileClasspath)
    transformOut
}

loom {
    remapArchives = false
    setupRemappedVariants = false
    enableTransitiveAccessWideners = false
    runConfigs.configureEach {
        ideConfigGenerated = false
    }
    interfaceInjection {
        enableDependencyInterfaceInjection = false
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }
    //DO NOT USE IN PROJECT
    //Provides necessary stuff for project to compile
    modCompileOnly "org.quiltmc:quilt-loader:${quilt_loader_version}"
    modCompileOnly 'com.github.javaparser:javaparser-core:3.24.4'

    implementation group:'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    transformOut sourceSets.extension.output
    transformOut sourceSets.transform.output
}

processResources {
    def buildProps = project.properties.clone()
    filesMatching(['pack.mcmeta']) {
        expand buildProps
    }
    exclude 'mods.groovy'
}

afterEvaluate {
    tasks.remapJar.setDependsOn([tasks.jar])
}
jar {
    archiveClassifier.set('')
    from sourceSets.extension.output
    from sourceSets.transform.output
}

remapJar.enabled = false
prepareRemapJar.enabled = false
remapSourcesJar.enabled = false

groovydoc {
    use = true
    docTitle = "CommonGroovyLibrary v${version} - Common"
}
tasks.register('groovydocJar', Jar) {
    it.classifier 'javadoc'
    it.from groovydoc.destinationDir
    it.dependsOn(groovydoc)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.github.groovymc.cgl'
            artifactId = "cgl-${minecraft_version}"
            version = project.version

            artifacts = [jar, sourcesJar, groovydocJar]
        }
    }
    repositories {
        maven {
            name = 'ModdingInquisitionMavenRepo'
            url = 'https://maven.moddinginquisition.org/releases'
            credentials {
                username = findProperty('inquisitionMavenUser') ?: ''
                password = findProperty('inquisitionMavenPassword') ?: ''
            }
        }
    }
}